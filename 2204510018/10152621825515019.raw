{"can_edit": true, "from": {"name": "Akshit Baunthiyal", "id": "100004318021049"}, "revision": "10152640786625019", "updated_time": "2013-02-23T16:06:16+0000", "can_delete": true, "created_time": "2013-02-17T08:16:24+0000", "message": "<p>Since I&#039;ve seen a lot of posts regarding a machine that does not boot due to some bootloader issue, I&#039;ve written this short document. It explains how to install GRUB2 and generate grub.cfg (menu entries).</p>\n<p>\u00a0</p>\n<p>\u00a0</p>\n<p><strong>Requirements:</strong></p>\n<ol><li>\n<p>Machine on which the bootloader is to be\tinstalled.</p>\n</li>\n<li>\n<p>Linux live USB/Disk. It is best that this is the install USB/Disk you \thave used for installing of your distro, though any distro usually would do (I recommend\tArch, more on the &#039;why&#039; later)</p>\n</li>\n</ol><p>\u00a0</p>\n<p>\u00a0</p>\n<p><strong>The easiest step you should try first:</strong></p>\n<p><em><strong>Note</strong><strong>s</strong><strong>:</strong> If you get something like &#039;sudo: command not found&#039;, just ignore &#039;sudo&#039; since a lot of distros provide minimal ISO which are logged into root by default. This method will only work if your \u201c/boot\u201d resides on your root partition! If this step fails then choose one of the next described methods.</em></p>\n<ol><li>\n<p>Open up a terminal if you&#039;re using a live session.</p>\n</li>\n<li>\n<p>Execute lsblk and check what location corresponds to the root \tpartition of your distro (I&#039;ll be using /dev/sda1 as an example).</p>\n</li>\n<li>\n<p>sudo bash (get a root bash for all the succeeding commands. \tIf this fails, try \u201csudo sh\u201d instead)</p>\n</li>\n<li>\n<p>mount /dev/sda1 /mnt (mount root partition on /mnt)</p>\n</li>\n<li>\n<p>grub-install -boot-directory=/mnt/boot /dev/sda (install GRUB \tto MBR using the grub version from the live CD)</p>\n</li>\n<li>\n<p>reboot</p>\n</li>\n</ol><p>\u00a0</p>\n<p>\u00a0</p>\n<p><strong>Steps </strong><strong>for Live USB /except for Arch/</strong><strong>:</strong></p>\n<p><em><strong>Note</strong><strong>s</strong><strong>:</strong> If you get something like &#039;sudo: command not found&#039;, just ignore &#039;sudo&#039; since a lot of distros provide minimal ISO which are logged into root by default. This method will only work if your /boot resides on your root partition!</em></p>\n<ol><li>\n<p>Open up a terminal if you&#039;re using a live session.</p>\n</li>\n<li>\n<p>Execute lsblk and check what location corresponds to the root \tpartition of your distro (I&#039;ll be using /dev/sda1 as an example).</p>\n</li>\n<li>\n<p>sudo bash (get a root bash for all the succeeding commands)</p>\n</li>\n<li>\n<p>mount /dev/sda1 /mnt (mount root partition on /mnt)</p>\n</li>\n<li>\n<p>for i in /dev /dev/pts /proc /sys; do mount -B $i /mnt$i; done (mount the necessarry accessories. Please mind the spaces and \tthe \u201c;\u201d char)</p>\n</li>\n<li>\n<p>chroot /mnt /bin/bash (changing root to /mnt and bash is shell).</p>\n</li>\n<li>\n<p>grub-mkconfig -o /boot/grub/grub.cfg (generate grub.cfg)</p>\n</li>\n<li>\n<p>grub-install /dev/sda (install GRUB to MBR using the grub \tversion from your broken system)</p>\n</li>\n<li>\n<p>exit (exit the fake root environment)</p>\n</li>\n<li>\n<p>for i in /dev/pts /dev /proc /sys; do umount /mnt$i; done \t(umount the temporary mounted accessories)</p>\n</li>\n<li>\n<p>cd (change directory to default)</p>\n</li>\n<li>\n<p>umount /mnt (unmount root partition. If you get something \tlike /mnt or any other partition is busy, it means one of the mounted temporary file systems was left unmounted. Use \u201cumount -f /mnt\u201d instead to unmount)</p>\n</li>\n<li>\n<p>reboot</p>\n</li>\n</ol><p>\u00a0</p>\n<p>\u00a0</p>\n<p><strong>Steps for Arch Live USB:</strong></p>\n<p><em><strong>Note:</strong></em><em> </em><em>I recommend the Arch USB because instead of a normal chroot, it also includes the arch-chroot which automatically mounts all of the required temporary file systems.</em></p>\n<ol><li>\n<p>mount /dev/sda1 /mnt</p>\n</li>\n<li>\n<p>arch-chroot /mnt</p>\n</li>\n<li>\n<p>Follow steps from 7-9 given above (in Steps for Live USB /except for Arch/)</p>\n</li>\n<li>\n<p>umount /mnt</p>\n</li>\n<li>\n<p>reboot</p>\n</li>\n</ol><p>\u00a0</p>\n<p>\u00a0</p>\n<p>Well, that&#039;s pretty much it, but here are a few pointers:</p>\n<ol><li>\n<p>Any of the described procedures may not\twork for you, since every distro has its own way of managing grub entries/installation etc. If all this doesn&#039;t work for you, try Google search with the terms \u201cfedora fix grub2\u201d for example (if you use Fedora).</p>\n</li>\n<li>\n<p>A good source of info on GRUB2 can be found here: https://help.ubuntu.com/community/Grub2/Installing and though it is Ubuntu specific in a way, it may help you resolve\tsome of your problems.</p>\n</li>\n<li>\n<p>If you get something like &#039;grub-install: command not found&#039; in the above listed steps, just install \u201cgrub-bios\u201d from \tyour respective package manager. Before that, you need to make sure you have a working internet connection.</p>\n</li>\n<li>\n<p>If GRUB does not have entries for Windows (in case you&#039;re dual booting), make sure you have \u201cos-prober\u201d  installed. And then regenerate the entries (step 7-9 in Steps for Live USB /except for Arch/).</p>\n</li>\n</ol><p>\u00a0</p>\n<p>The original of the article can be found here: http://pastebin.com/yCS91hdZ</p>", "subject": "Re-install GRUB2 (General Help)", "id": "10152621825515019", "icon": "https://fbstatic-a.akamaihd.net/rsrc.php/v2/yi/r/-64q65AWgXb.png"}